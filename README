control键和caps_lock 切换
[url:https://blog.csdn.net/u014717036/article/details/57082204]
创建自己的映射表并且把它储存在你的home目录下
> xmodmap -pke > ~/.Xmodmap

将CapsLock映射成Control, Shift+CapsLock映射成CapsLock
在 ~/.Xmodmap文件最后添加下面几句：

clear lock
clear control
add control = Caps_Lock Control_L Control_R
keycode 66 = Control_L Caps_Lock NoSymbol NoSymbol

测试改动是否生效
> xmodmap ~/.Xmodmap

要在启动Xorg时激活你自己的映射表
在~/.xinitrc文件末尾添加下面内容

if [ -f $HOME/.Xmodmap ]; then
    /usr/bin/xmodmap $HOME/.Xmodmap
fi

===================

快速对引号或括号等标点内的内容进行选中、删除、复制操作的超级技巧。可以极大的提高编辑效率。

以下命令可以对标点内的内容进行操作。
ci'、ci"、ci(、ci[、ci{、ci< - 分别更改这些配对标点符号中的文本内容
di'、di"、di(或dib、di[、di{或diB、di< - 分别删除这些配对标点符号中的文本内容
yi'、yi"、yi(、yi[、yi{、yi< - 分别复制这些配对标点符号中的文本内容
vi'、vi"、vi(、vi[、vi{、vi< - 分别选中这些配对标点符号中的文本内容

另外如果把上面的i改成a可以连配对标点一起操作。

举个例子：

比如要操作的文本如下：

111"222"333
111"222"333

将光标移到"222"的任何一个字符处输入命令 di" ,文本会变成： 111""333

若输入命令 da" ,文本会变成： 111333

===================
代码块折叠
VIM代码折叠方式可以用"foldmethod"选项来设置，如: set foldmethod=indent

有6种方式来折叠代码
    1. manual //手工定义折叠
    2. indent //用缩进表示折叠
    3. expr　 //用表达式来定义折叠
    4. syntax //用语法高亮来定义折叠
    5. diff   //对没有更改的文本进行折叠
    6. marker //用标志折叠
    
indent 折叠指令
    az 打开或关闭当前折叠;
    zM 关闭所有折叠
    zR 打开所有折叠
indent方式，vim会自动利用缩进进行折叠，我们可以使用现成的折叠成果．
我们可以在(括号)折叠处输入以下命令：

    zc 折叠
    zC 对所在范围内所有嵌套的折叠点进行折叠
    zo 展开折叠
    zO 对所在范围内所有嵌套的折叠点展开
    [z 到当前打开的折叠的开始处。
    ]z 到当前打开的折叠的末尾处。
    zj 向下移动。到达下一个折叠的开始处。关闭的折叠也被计入。
    zk 向上移动到前一折叠的结束处。关闭的折叠也被计入。
 

vim 配置文件分为全局配置文件和用户配置文件

1. 全局配置文件查找，在.vim 中输入:echo $VIM,一般为：/usr/share/vim/vimrc
2. 用户配置文件在用户主目录下，如：/home/abeen/.vimrc

在vimrc文件中设置折叠方式：如set foldmethod=indent

 

选定折叠方式后，就可以使用折叠命令进行折叠操作了．常用的折叠方式为indent和marker．

indent折叠命令

操作：za，打开或关闭当前折叠；zM，关闭所有折叠；zR，打开所有折叠

indent方式，vim会自动利用缩进进行折叠，我们可以使用现成的折叠成果．
我们可以在(括号)折叠处输入以下命令：

zc 折叠
zC 对所在范围内所有嵌套的折叠点进行折叠
zo 展开折叠
zO 对所在范围内所有嵌套的折叠点展开
[z 到当前打开的折叠的开始处。
]z 到当前打开的折叠的末尾处。
zj 向下移动。到达下一个折叠的开始处。关闭的折叠也被计入。
zk 向上移动到前一折叠的结束处。关闭的折叠也被计入。

 

marker折叠命令
marker折叠方式时，我们需要用标计来标识代码的折叠，系统默认是{{{和}}}
折叠命令

zf　创建折叠，比如在marker方式下：
        zf56G，创建从当前行起到56行的代码折叠；
        10zf或10zf+或zf10↓，创建从当前行起到后10行的代码折叠。
        10zf-或zf10↑，创建从当前行起到之前10行的代码折叠。
        在括号处zf%，创建从当前行起到对应的匹配的括号上去（（），{}，[]，<>等）。
zd  删除 (delete) 在光标下的折叠。仅当 'foldmethod' 设为 "manual" 或 "marker"
时有效。
zD  循环删除 (Delete) 光标下的折叠，即嵌套删除折叠。仅当 'foldmethod' 设为
"manual" 或 "marker" 时有效。
zE  除去 (Eliminate) 窗口里“所有”的折叠。仅当 'foldmethod' 设为 "manual" 或
"marker" 时有效。

[https://pic002.cnblogs.com/img/abeen/201008/2010080620260412.jpg]

============================
多选,替换
语法为 
    :[addr]s/源字符串/目的字符串/[option]
全局替换命令为
    :%s/源字符串/目的字符串/g

[addr] 表示检索范围，省略时表示当前行。
    “1,20” ：表示从第1行到20行；
    “%” ：表示整个文件，同“1,$”；
    “. ,$” ：从当前行到文件尾；

s : 表示替换操作
 
[option] : 表示操作类型
    g 表示全局替换; 
    c 表示进行确认
    p 表示替代结果逐行显示（Ctrl + L恢复屏幕）;
    省略option时仅对每行第一个匹配串进行替换;
    如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义 如 \t


下面是一些例子：
==================================================
#将That or this 换成 This or that
:%s/\(That\) or \(this\)/\u\2 or \l\1/

=======================================================
#将句尾的child换成children
:%s/child\([ ,.;!:?]\)/children\1/g

=======================================================
#将mgi/r/abox换成mgi/r/asquare
:g/mg\([ira]\)box/s//mg//my\1square/g    <=>  :g/mg[ira]box/s/box/square/g

=======================================================
#将多个空格换成一个空格
:%s/  */ /g

=======================================================
#使用空格替换句号或者冒号后面的一个或者多个空格
:%s/\([:.]\)  */\1 /g

=======================================================
#删除所有空行
:g/^$/d

=======================================================
#删除所有的空白行和空行
:g/^[  ][  ]*$/d

=======================================================
#在每行的开始插入两个空白
:%s/^/>  /

=======================================================
#在接下来的6行末尾加入.
:.,5/$/./

=======================================================
#颠倒文件的行序
:g/.*/m0O  <=> :g/^/m0O

=======================================================
#寻找不是数字的开始行,并将其移到文件尾部
:g!/^[0-9]/m$ <=> g/^[^0-9]/m$

=======================================================
#将文件的第12到17行内容复制10词放到当前文件的尾部
:1,10g/^/12,17t$
~~~~重复次数的作用

=======================================================
#将chapter开始行下面的第二行的内容写道begin文件中
:g/^chapter/.+2w>>begin

=======================================================
:/^part2/,/^part3/g/^chapter/.+2w>>begin

=======================================================
:/^part2/,/^part3/g/^chapter/.+2w>>begin|+t$
@see https://www.cnblogs.com/beenoisy/p/4046074.html

===================================
===================================
===================================
===================================
vim ctrl+s 就死

由于windows下编程习惯了保存就ctrl+s，在vim下ctrl+s整个putty终端就死了，遇到好几次这种情况，网上查了下原来ctrl+s在LINUX里是锁定屏幕的快捷键，解锁ctrl+q就可以了


=========================
设置tab缩进为4个空格set tabstop=4
